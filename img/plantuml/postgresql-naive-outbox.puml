@startuml

scale max 1024 width
scale max 1100 height

skinparam sequence {
  LifeLineBorderColor Grey
'  LifeLineBackgroundColor LightGrey
}

participant "Append event\nTransaction #1" as tx1
participant "Append event\nTransaction #2" as tx2
database "PostgreSQL" as db
participant "Read events\nafter checkpoint\nTransaction #3" as tx3
participant "Read events\nafter checkpoint\nTransaction #4" as tx4

tx1 --> db: ""BEGIN TRANSACTION""
activate tx1
tx1 --> db: ""SELECT nextval('ES_EVENT_ID_SEQ')""
db --> tx1: //nextval=101//
tx2 --> db: ""BEGIN TRANSACTION""
activate tx2
note over tx2: Transaction #2 starts\nafter transaction #1
tx2 --> db: ""SELECT nextval('ES_EVENT_ID_SEQ')""
db --> tx2: //nextval=102//
|||
tx1 --> db: ""INSERT INTO ES_EVENT(ID)""\n""VALUES(101)""
tx2 --> db: ""INSERT INTO ES_EVENT(ID)""\n""VALUES(102)""
note over tx2: Transaction #2 commits\nbefore transaction #1
tx2 --> db: ""COMMIT""
deactivate tx2
tx3 --> db: ""BEGIN TRANSACTION""
activate tx3
tx3 --> db: ""SELECT LAST_EVENT_ID""\n""FROM ES_EVENT_SUBSCRIPTION""
db --> tx3: //LAST_EVENT_ID=100//
tx3 --> db: ""SELECT ID FROM ES_EVENT""\n""WHERE ID > 100""
db --> tx3: //ID=102//
note over tx3: Process event with ID=102
tx1 --> db: ""COMMIT""
deactivate tx1
tx3 --> db: ""UPDATE ES_EVENT_SUBSCRIPTION""\n""SET LAST_EVENT_ID = 102""
tx3 --> db: ""COMMIT""
deactivate tx3
|||
tx4 --> db: ""BEGIN TRANSACTION""
activate tx4
tx4 --> db: ""SELECT LAST_EVENT_ID""\n""FROM ES_EVENT_SUBSCRIPTION""
db --> tx4: //LAST_EVENT_ID=102//
tx4 --> db: ""SELECT ID FROM ES_EVENT""\n""WHERE ID > 102""
db --> tx4: //No rows//
note over tx4: Event with ID=101 is lost
tx4 --> db: ""COMMIT""
deactivate tx4

@enduml
